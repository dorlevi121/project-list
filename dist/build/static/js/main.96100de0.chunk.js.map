{"version":3,"sources":["components/shared/UI/button.module.scss","sass/form/form.module.scss","components/layout/navbar/navbar.module.scss","components/projects/project-details/projectDetails.module.scss","components/layout/sign-in-links/signInLinks.layout.tsx","store/auth/auth.actions.ts","components/layout/sign-out-links/signOutLinks.layout.tsx","components/layout/navbar/navbar.layout.tsx","store/project/project.types.ts","components/dashboard/notifications/notification.dashboard.tsx","components/projects/project-summary/projectSummary.project.tsx","components/projects/project-list/projectList.project.tsx","components/dashboard/dashboard.dashboard.tsx","components/projects/project-details/projectDetails.project.tsx","components/shared/UI/button.tsx","components/auth/sign-in/signIn.auth.tsx","components/auth/sign-up/signUp.auth.tsx","store/project/project.actions.ts","components/projects/create-project/createProject.project.tsx","app.routing.tsx","App.tsx","serviceWorker.ts","store/project/project.state.ts","store/auth/auth.types.ts","store/auth/auth.state.ts","store/auth/auth.reducer.tsx","store/rootReducers.ts","store/project/project.reducer.tsx","config/fbConfig.tsx","index.tsx","components/dashboard/dashboard.module.scss","components/dashboard/notifications/notifications.module.scss","components/projects/project-summary/projectSummary.module.scss"],"names":["module","exports","compose","connect","state","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","navbarStyle","Links","to","onClick","User","profile","initials","SignOutLinks","ProjectActionsEnum","firebase","links","uid","Navbar","Logo","isLoaded","Notifications","notificationsStyle","Title","Content","notifications","map","n","key","id","user","content","Time","moment","time","toDate","fromNow","ProjectSummary","projectSummaryStyle","Project","project","title","Author","authorFirstName","authorLastName","Date","createAt","calendar","ProjectList","projectListStyle","projects","Dashboard","console","log","this","dashboardStyle","Row","Projects","Component","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","ProjectDetailsStyle","ProjectDetails","Card","Details","Button","buttonStyle","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","formStyle","onSubmit","FormGroup","Question","name","onChange","autoComplete","required","htmlFor","LogginError","isLogIn","authError","credential","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","style","marginTop","color","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","dispach","authId","add","authorId","CREATE_PROJECT","CREATE_PROJECT_ERROR","Routing","exact","path","component","App","Boolean","window","location","hostname","AuthActionsEnum","initialProjectState","initialAuthState","rootReducer","combineReducers","action","LOGIN_ERROR","LOGIN_SUCCESS","SIGNOUT_SUCCESS","SIGNUP_ERROR","message","SIGNUP_SUCCESS","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.96100de0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__25Uyh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignIn\":\"form_SignIn__2j8wW\",\"FormGroup\":\"form_FormGroup__1xCMo\",\"Question\":\"form_Question__2LL3g\",\"Button\":\"form_Button__23Tti\",\"appear\":\"form_appear__3tBZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"navbar_Navbar__3YZg5\",\"Logo\":\"navbar_Logo__foqKJ\",\"Links\":\"navbar_Links__2Zt8M\",\"User\":\"navbar_User__ljpOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProjectDetails\":\"projectDetails_ProjectDetails__3q8Th\",\"Card\":\"projectDetails_Card__2hGaU\",\"Content\":\"projectDetails_Content__3Z2T0\",\"Details\":\"projectDetails_Details__4HTw7\",\"Author\":\"projectDetails_Author__2exSh\",\"Date\":\"projectDetails_Date__2PeCE\"};","import React from \"react\";\nimport navbarStyle from \"../navbar/navbar.module.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../../store/auth/auth.actions\";\n\ninterface StateProps {}\n\ninterface DispatchProps {\n  signOut: typeof signOut;\n}\n\ninterface Props {\n  profile: any;\n}\n\ntype OwnProps = StateProps & DispatchProps & Props;\n\nconst SignInLinks: React.FC<OwnProps> = props => {\n  return (\n    <div className={navbarStyle.Links}>\n      <ul>\n        <li>\n          <NavLink to=\"/create\">new project</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/\" onClick={props.signOut}>\n            Log out\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/\">\n            <span className={navbarStyle.User}>{props.profile.initials}</span>\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  signOut: () => dispatch(signOut())\n});\n\nexport default compose<any>(\n  connect<StateProps, DispatchProps, OwnProps>(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(SignInLinks);\n","\nexport const signIn = (credentials: any) => {\n    return (dispatch: any, getState: any, { getFirebase }: any) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err: any) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        });\n\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch: any, getState: any, { getFirebase }: any) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\n        });\n    }\n}\n\nexport const signUp = (newUser: any) => {\n    return (dispatch: any, getState: any, {getFirebase, getFirestore}: any) => {\n      const firebase = getFirebase();\n      const firestore = getFirestore();\n  \n      firebase.auth().createUserWithEmailAndPassword(\n        newUser.email, \n        newUser.password\n      ).then((resp: any) => {\n        return firestore.collection('users').doc(resp.user.uid).set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0]\n        });\n      }).then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n      }).catch((err: any) => {\n        dispatch({ type: 'SIGNUP_ERROR', err});\n      });\n    }\n  }","import React from \"react\";\nimport navbarStyle from \"../navbar/navbar.module.scss\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function SignOutLinks() {\n  return (\n    <div className={navbarStyle.Links}>\n     <ul>\n          <li>\n            <NavLink to=\"/signup\">sign up</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/signin\">Sign In</NavLink>\n          </li>\n        </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport navbarStyle from \"./navbar.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport SignInLinks from \"../sign-in-links/signInLinks.layout\";\nimport SignOutLinks from \"../sign-out-links/signOutLinks.layout\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\ninterface StateProps {\n  auth: any;\n  profile: any\n}\ntype OwnProps = StateProps;\n\nconst Navbar: React.FC<OwnProps> = props => {\n  const links = props.auth.uid ? <SignInLinks profile={props.profile}/> : <SignOutLinks />;\n  return (\n    <div className={navbarStyle.Navbar}>\n      <div className={navbarStyle.Logo}>\n        <Link to=\"/\">LOGO</Link>\n      </div>\n      {props.auth.isLoaded && links}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  auth: state.firebase.auth,\n  profile: state.firebase.profile\n});\n\nexport default compose<any>(\n  connect<StateProps, null, OwnProps>(mapStateToProps, null)\n)(Navbar);\n","import { Project } from \"../../models/project.model\";\n\nexport interface ProjectState {\n    projects: Project[]\n}\n\nexport enum ProjectActionsEnum {\n    CREATE_PROJECT = \"CREATE_PROJECT\",\n    CREATE_PROJECT_ERROR = \"CREATE_PROJECT_ERROR\"\n}\n\nexport interface ProjectActionPattern {\n    type: ProjectActionsEnum; //Action Type\n}\n\nexport interface createProjectActionType extends ProjectActionPattern {\n    type: ProjectActionsEnum.CREATE_PROJECT,\n    project: { title: string, content: string }\n}\n\nexport interface createProjectErrorActionType extends ProjectActionPattern {\n    type: ProjectActionsEnum.CREATE_PROJECT_ERROR,\n    err: any\n}","import React from \"react\";\nimport notificationsStyle from \"./notifications.module.scss\";\nimport moment from \"moment\";\n\ninterface Props {\n  notifications: any;\n}\n\nconst Notifications: React.FC<Props> = props => {\n  return (\n    <div className={notificationsStyle.Notifications}>\n      <div className={notificationsStyle.Title}>\n        <p>Notifications</p>\n      </div>\n      <div className={notificationsStyle.Content}>\n        <ul>\n          {props.notifications &&\n            props.notifications.map((n: any) => (\n              <li key={n.id}>\n                <span>{n.user}</span>\n                <span>{n.content}</span>\n                <div className={notificationsStyle.Time}>\n                  <p>{moment(n.time.toDate()).fromNow()}</p>\n                </div>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport projectSummaryStyle from \"./projectSummary.module.scss\";\nimport moment from \"moment\";\n\ninterface OwnProps {\n  project: any;\n}\n\nconst ProjectSummary: React.FC<OwnProps> = props => {\n  return (\n    <div className={projectSummaryStyle.Project}>\n      <div className={projectSummaryStyle.ProjectSummary}>\n        <span>{props.project.title}</span>\n        <div className={projectSummaryStyle.Author}>\n          <p>{props.project.authorFirstName} {props.project.authorLastName}</p>\n        </div>\n        <div className={projectSummaryStyle.Date}>\n        <p>{moment(props.project.createAt.toDate()).calendar()}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport projectListStyle from \"./projectList.module.scss\";\nimport ProjectSummary from \"../project-summary/projectSummary.project\";\nimport { Project } from \"../../../models/project.model\";\nimport { Link } from \"react-router-dom\";\n\ninterface OwnProps {\n  projects: any\n}\n\nconst ProjectList: React.FC <OwnProps> = (props) => {\n  \n  return (\n    <div className={projectListStyle.ProjectList}>\n      { props.projects && props.projects.map((project: Project) => (\n        <Link to={'/project/' + project.id} key={project.id}>\n        <ProjectSummary project={project} />\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport dashboardStyle from \"./dashboard.module.scss\";\nimport Notification from \"./notifications/notification.dashboard\";\nimport ProjectList from \"../projects/project-list/projectList.project\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\ninterface StateProps {\n  projects: any;\n  auth: any;\n  notifications: any;\n}\n\ninterface DispatchProps {}\n\ntype OwnProps = StateProps & DispatchProps;\n\nclass Dashboard extends Component<OwnProps> {\n  render() {\n    console.log(this.props.auth);\n\n    if (!this.props.auth.uid) return <Redirect to=\"/signin\" />;\n\n    return (\n      <div className={dashboardStyle.Dashboard}>\n        <div className={dashboardStyle.Row}>\n          <div className={dashboardStyle.Projects}>\n            <ProjectList projects={this.props.projects} />\n          </div>\n          <div className={dashboardStyle.Notifications}>\n            <Notification notifications={this.props.notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  projects: state.firestore.ordered.projects,\n  auth: state.firebase.auth,\n  notifications: state.firestore.ordered.notifications\n});\n\nexport default compose<any>(\n  connect<StateProps, DispatchProps>(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: ['createAt', 'desc'] },\n    { collection: \"notifications\", limit: 3, orderBy: ['time', 'desc'] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport ProjectDetailsStyle from \"./projectDetails.module.scss\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport moment from 'moment';\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\ninterface StateProps {\n  project: any;\n  auth: any\n}\ninterface Props {\n  match: any;\n}\n\ntype OwnProps = StateProps & Props;\n\nconst ProjectDetails: React.FC<OwnProps> = props => {\n  if (!props.auth.uid) return <Redirect to=\"/signin\" />;\n  \n  if (!props.project) return ( <p>Loading Project...</p>);\n\n  return (\n    <div className={ProjectDetailsStyle.ProjectDetails}>\n      <div className={ProjectDetailsStyle.Card}>\n        <div className={ProjectDetailsStyle.Content}>\n          <span>{props.project.title}</span>\n          <p>{props.project.content}</p>\n        </div>\n        <hr />\n        <div className={ProjectDetailsStyle.Details}>\n          <div className={ProjectDetailsStyle.Author}>\n            <p>\n              Post By: {props.project.authorFirstName}{\" \"}\n              {props.project.authorLastName}\n            </p>\n          </div>\n          <div className={ProjectDetailsStyle.Date}>\n            <p>{moment(props.project.createAt.toDate()).calendar()}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: Props) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose<any>(\n  connect<StateProps, null, OwnProps>(mapStateToProps, null),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React from \"react\";\nimport buttonStyle from \"./button.module.scss\";\n\ninterface OwnProps {\n  title: string;\n}\n\nconst Button: React.FC<OwnProps> = props => {\n  return <button className={buttonStyle.Button}>{props.title}</button>;\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport formStyle from \"../../../sass/form/form.module.scss\";\nimport Button from \"../../shared/UI/button\";\nimport { signIn } from \"../../../store/auth/auth.actions\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\ninterface StateProps {\n  isLogIn: string | null;\n  auth: any\n}\n\ninterface DispatchProps {\n  signIn: typeof signIn;\n}\n\ntype OwnProps = StateProps & DispatchProps;\n\nclass SignIn extends Component<OwnProps> {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = (e: any) => {\n    this.setState({ [e.target.type]: e.target.value });\n  };\n\n  handleSubmit = (e: any) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n  render() {\n    if (this.props.auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className={formStyle.SignIn}>\n        <form onSubmit={(e: any) => this.handleSubmit(e)}>\n          <h5>Sign In</h5>\n          <div className={formStyle.FormGroup}>\n            <input\n              className={formStyle.Question}\n              type=\"email\"\n              name=\"email\"\n              onChange={this.handleChange}\n              autoComplete=\"off\"\n              value={this.state.email}\n              required\n            />\n            <label htmlFor=\"email\">\n              <span>Email</span>\n            </label>\n          </div>\n          <div className={formStyle.FormGroup}>\n            <input\n              className={formStyle.Question}\n              type=\"password\"\n              name=\"password\"\n              onChange={this.handleChange}\n              autoComplete=\"off\"\n              value={this.state.password}\n              required\n            />\n            <label htmlFor=\"password\">\n              <span>Password</span>\n            </label>\n          </div>\n          <div className={formStyle.Button}>\n            <Button title=\"submit\" />\n          </div>\n        </form>\n        <div className={formStyle.LogginError}>\n          <p>{this.props.isLogIn}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  isLogIn: state.auth.authError,\n  auth: state.firebase.auth\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  signIn: (credential: any) => dispatch(signIn(credential))\n});\n\nexport default compose<any>(\n  connect<StateProps, DispatchProps, OwnProps>(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(SignIn);\n","import React, { Component } from \"react\";\nimport formStyle from \"../../../sass/form/form.module.scss\";\nimport Button from \"../../shared/UI/button\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../../store/auth/auth.actions\";\n\ninterface StateProps {\n  auth: any;\n  authError: string | null;\n}\n\ninterface DispatchProps {\n  signUp: any;\n}\n\ntype OwnProps = StateProps & DispatchProps;\n\nclass SignUp extends Component <OwnProps> {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n\n  handleChange = (e: any) => {\n   this.setState({[e.target.name]: e.target.value})\n  };\n\n  handleSubmit = (e: any) => {\n    e.preventDefault();\n    this.props.signUp(this.state)\n  };\n  render() {\n    if (this.props.auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className={formStyle.SignIn}>\n        <form onSubmit={(e: any) => this.handleSubmit(e)}>\n          <h5>Sign Up</h5>\n          {/* Email */}\n          <div className={formStyle.FormGroup}>\n            <input\n              className={formStyle.Question}\n              type=\"email\"\n              name=\"email\"\n              onChange={this.handleChange}\n              autoComplete=\"off\"\n              value={this.state.email}\n              required\n            />\n            <label htmlFor=\"email\">\n              <span>Email</span>\n            </label>\n          </div>\n          {/* Password */}\n          <div className={formStyle.FormGroup}>\n            <input\n              className={formStyle.Question}\n              type=\"password\"\n              name=\"password\"\n              onChange={this.handleChange}\n              autoComplete=\"off\"\n              value={this.state.password}\n              required\n            />\n            <label htmlFor=\"password\">\n              <span>Password</span>\n            </label>\n          </div>\n            {/* First Name */}\n            <div className={formStyle.FormGroup} style={{marginTop: '3%'}}>\n            <input\n              className={formStyle.Question}\n              type=\"text\"\n              name=\"firstName\"\n              onChange={this.handleChange}\n              autoComplete=\"off\"\n              value={this.state.firstName}\n              required\n            />\n            <label htmlFor=\"firstName\">\n              <span>First Name</span>\n            </label>\n          </div>\n          {/* Last Name */}\n          <div className={formStyle.FormGroup} style={{marginTop: '3%'}}>\n            <input\n              className={formStyle.Question}\n              type=\"text\"\n              name=\"lastName\"\n              onChange={this.handleChange}\n              autoComplete=\"off\"\n              value={this.state.lastName}\n              required\n            />\n            <label htmlFor=\"lastName\">\n              <span>Last Name</span>\n            </label>\n          </div>\n          <div className={formStyle.Button}>\n            <Button title=\"submit\" />\n          </div>\n        </form> \n          <p style={{color: 'red'}}>{this.props.authError}</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  auth: state.firebase.auth,\n  authError: state.auth.authError\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  signUp: (user: any) => dispatch(signUp(user))\n});\n\nexport default compose<any>(\n  connect<StateProps, DispatchProps>(mapStateToProps, mapDispatchToProps))(SignUp);\n","import { ProjectActionsEnum } from \"./project.types\";\n\nexport const createProject = (project: { title: string; content: string }) => {\n    return (dispach: any, getState: any, { getFirebase, getFirestore }: any) => {\n        const profile = getState().firebase.profile;\n        const authId = getState().firebase.auth.uid;\n\n        //add to db\n        const fitestore = getFirestore();\n        fitestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authId,\n            createAt: new Date()\n                }).then(() => {\n            dispach({ type: ProjectActionsEnum.CREATE_PROJECT, project: project })\n        }).catch((err: any) => {\n            dispach({ type: ProjectActionsEnum.CREATE_PROJECT_ERROR, err: err })\n        })\n    }\n}\n","import React, { Component } from \"react\";\nimport formStyle from \"../../../sass/form/form.module.scss\";\nimport Button from \"../../shared/UI/button\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../../store/project/project.actions\";\nimport { Redirect } from \"react-router-dom\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n\n\ninterface StateProps {\n  auth: any;\n}\n\ninterface DispatchProps {\n  createProject: typeof createProject;\n}\n\ninterface Props extends RouteComponentProps<any> {\n  /* Parent component's props*/\n  history: any\n}\n\ntype OwnProps = StateProps & DispatchProps & Props;\n\nclass CreateProject extends Component<OwnProps> {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n\n  handleChange = (e: any) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e: any) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  };\n\n  render() {\n    if (!this.props.auth.uid) return <Redirect to=\"/signin\" />;\n\n    return (\n      <div className={formStyle.SignIn}>\n        <form onSubmit={(e: any) => this.handleSubmit(e)}>\n          <h5>Create New Project</h5>\n          <div className={formStyle.FormGroup}>\n            <input\n              className={formStyle.Question}\n              type=\"text\"\n              name=\"title\"\n              onChange={this.handleChange}\n              autoComplete=\"off\"\n              value={this.state.title}\n              required\n            />\n            <label htmlFor=\"title\">\n              <span>Title</span>\n            </label>\n          </div>\n          <div className={formStyle.FormGroup}>\n            <textarea\n              className={formStyle.Question}\n              name=\"content\"\n              onChange={this.handleChange}\n              value={this.state.content}\n              required\n            ></textarea>\n            <label htmlFor=\"content\">\n              <span>Content</span>\n            </label>\n          </div>\n          <div className={formStyle.Button}>\n            <Button title=\"submit\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  auth: state.firebase.auth\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  createProject: (project: any) =>\n    dispatch(createProject(project))\n});\n\nexport default connect<StateProps, DispatchProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport Dashboard from \"./components/dashboard/dashboard.dashboard\";\nimport ProjectDetails from \"./components/projects/project-details/projectDetails.project\";\nimport SignIn from \"./components/auth/sign-in/signIn.auth\";\nimport SignUp from \"./components/auth/sign-up/signUp.auth\";\nimport CreateProject from \"./components/projects/create-project/createProject.project\";\n\nexport const Routing: React.FC = () => (\n  <Switch>\n    <Route exact path='/' component={Dashboard}/>\n    <Route path='/project/:id' component={ProjectDetails}/>\n    <Route path='/signin' component={SignIn}/>\n    <Route path='/signup' component={SignUp}/>\n    <Route path='/create' component={CreateProject}/>\n\n  </Switch>\n);\n\nexport default Routing;","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Navbar from \"./components/layout/navbar/navbar.layout\";\nimport Routing from './app.routing';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar/>\n        <Routing/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ProjectState } from \"./project.types\";\n\nexport const initialProjectState: ProjectState = {\n    projects: [\n        {id: 1, title: 'help me find peach', content: 'blah blah blah'},\n        {id: 2, title: 'collect all the stars', content: 'blah blah blah'},\n        {id: 3, title: 'egg hunt with yoshi', content: 'blah blah blah'}\n    ]\n}","export interface AuthState {\n    authError: string | null\n}\n\nexport enum AuthActionsEnum {\n    LOGIN_SUCCESS = \"LOGIN_SUCCESS\",\n    LOGIN_ERROR = \"LOGIN_ERROR\",\n    SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\",\n    SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\",\n    SIGNUP_ERROR = \"SIGNUP_ERROR\"\n}\n\nexport interface AuthActionPattern {\n    type: AuthActionsEnum; //Action Type\n}\n\nexport interface logingSuccessActionType extends AuthActionPattern {\n    type: AuthActionsEnum.LOGIN_SUCCESS\n}\n\nexport interface logingErrorActionType extends AuthActionPattern {\n    type: AuthActionsEnum.LOGIN_ERROR\n    err: any\n}\n\nexport interface signOutActionType extends AuthActionPattern {\n    type: AuthActionsEnum.SIGNOUT_SUCCESS\n}\n\nexport interface signUpSuccessActionType extends AuthActionPattern {\n    type: AuthActionsEnum.SIGNUP_SUCCESS\n}\n\nexport interface signUpErrorActionType extends AuthActionPattern {\n    type: AuthActionsEnum.SIGNUP_ERROR,\n    err: any\n}","import { AuthState } from \"./auth.types\";\n\nexport const initialAuthState: AuthState = {\n    authError: null\n    \n}","import { initialAuthState } from \"./auth.state\";\nimport {\n  logingErrorActionType,\n  logingSuccessActionType,\n  AuthActionsEnum,\n  signOutActionType,\n  signUpErrorActionType,\n  signUpSuccessActionType\n} from \"./auth.types\";\n\ntype allAuthActionTypes =\n  | logingErrorActionType\n  | logingSuccessActionType\n  | signOutActionType\n  | signUpErrorActionType\n  | signUpSuccessActionType;\n\nexport const authReducer = (\n  state = initialAuthState,\n  action: allAuthActionTypes\n) => {\n  switch (action.type) {\n    case AuthActionsEnum.LOGIN_ERROR:\n      return {\n        ...state,\n        authError: \"Login Failed!\"\n      };\n\n    case AuthActionsEnum.LOGIN_SUCCESS:\n      return {\n        ...state,\n        authError: null\n      };\n\n    case AuthActionsEnum.SIGNOUT_SUCCESS:\n      return state;\n\n    case AuthActionsEnum.SIGNUP_ERROR:\n      return {\n        ...state,\n        authError: action.err.message\n      };\n\n    case AuthActionsEnum.SIGNUP_SUCCESS:\n      return {\n        ...state,\n        authError: null\n      };\n  }\n\n  return state;\n};\n","import {combineReducers} from \"redux\";\nimport { projectReducer } from \"./project/project.reducer\";\nimport { authReducer } from \"./auth/auth.reducer\";\nimport {firestoreReducer} from 'redux-firestore';\nimport {firebaseReducer} from 'react-redux-firebase';\n\nexport const rootReducer = combineReducers({\n    project: projectReducer,\n    auth:  authReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})","import { createProjectActionType, ProjectActionsEnum, createProjectErrorActionType } from \"./project.types\"\nimport {initialProjectState} from './project.state';\n\ntype allProjectActionTypes = createProjectActionType | createProjectErrorActionType;\n\nexport const projectReducer = (state = initialProjectState, action: allProjectActionTypes) => {\n    switch (action.type) {\n        case ProjectActionsEnum.CREATE_PROJECT:\n            console.log(\"CREATE_PROJECT: \" + action.project);\n            return state;\n        case ProjectActionsEnum.CREATE_PROJECT_ERROR:\n            console.log(\"CREATE_PROJECT_ERROR: \" + action.err);\n            return state;\n            \n        \n    }\n\n    return state;\n}","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig: any = {\n  apiKey: \"AIzaSyC9L9jpErHt9-k0cJuZILB-2oC4TE-Zv8M\",\n  authDomain: \"project-log-5c5f7.firebaseapp.com\",\n  databaseURL: \"https://project-log-5c5f7.firebaseio.com\",\n  projectId: \"project-log-5c5f7\",\n  storageBucket: \"project-log-5c5f7.appspot.com\",\n  messagingSenderId: \"721945942450\",\n  appId: \"1:721945942450:web:057621b1d68ad286916cab\",\n  measurementId: \"G-6S6B6M71N8\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n//firebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { rootReducer } from \"./store/rootReducers\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig)\n  )\n);\n\nconst config = {\n  userProfile: \"users\", // where profiles are stored in database,\n  useFirestoreForProfile: true\n};\n\nconst rrfProps = {\n  firebase,\n  config,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\n\n// const rrfProps = {\n//   firebase,\n//   config: fbConfig,\n//   dispatch: store.dispatch,\n//   createFirestoreInstance\n// }\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"dashboard_Dashboard__8Et8f\",\"Row\":\"dashboard_Row__2TamT\",\"Projects\":\"dashboard_Projects__1ZlfB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notifications\":\"notifications_Notifications__3O15d\",\"Title\":\"notifications_Title__3unXN\",\"Content\":\"notifications_Content__lw2Vb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Project\":\"projectSummary_Project__3nFbj\",\"ProjectSummary\":\"projectSummary_ProjectSummary__2Dwhf\",\"Date\":\"projectSummary_Date__3_9cz\"};"],"sourceRoot":""}